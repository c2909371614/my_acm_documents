第二题：四叶草魔杖

类型：Floyd传递闭包+最小生成树+状态压缩动态规划

首先Floyd传递闭包，然后找出所有∑ai =0的集合，对每个集合求出最小生成树，就是该集合内部能量转化的最小代价。

然后把每个集合当做一个物品，做一遍类似背包的DP。DP过程中F[i]表示二进制状态为i（1表示该点选了，0表示没选）时已选的点之间能量转化的最小代价。然后枚举所有的j，如果i and j=0，那么用F[i]+F[j]更新一下F[i or j]。

直接这样DP可能会超时，我们不妨去除一些诸如ai=0之类的点。然后把∑ai=0的集合存进数组，DP时只循环数组内的状态来加速。